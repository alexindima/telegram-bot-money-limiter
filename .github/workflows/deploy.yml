name: Deploy Telegram Bot

on:
  push:
    branches:
      - main

env:
  NODE_VERSION: 22
  SERVER_IP: 193.109.69.58
  BOT_DIR: /var/www/telegram-bot-money-limiter

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setting up SSH
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "SSH setup completed."

      - name: Creating directory on the server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP }} << EOF
          mkdir -p "${{ env.BOT_DIR }}"
          chmod -R 755 "${{ env.BOT_DIR }}"
          echo "Directory created and permissions set."
          EOF

      - name: Uploading source files
        run: |
          rsync -az --quiet --human-readable --exclude=node_modules --exclude=dist --exclude=.env -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            ./ root@${{ env.SERVER_IP }}:${{ env.BOT_DIR }}/

      - name: Install dependencies and build project
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP }} << EOF
          cd "${{ env.BOT_DIR }}"
          npm install --production
          npm run build
          echo "Dependencies installed and project built."
          EOF

      - name: Create .env file
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP }} << EOF
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > ${BOT_DIR}/.env
          echo "Environment variables set."
          EOF

      - name: Start bot with PM2 using ecosystem.config.js
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP }} << EOF
          cd "${{ env.BOT_DIR }}"
          pm2 delete telegram-bot || true
          pm2 start ecosystem.config.js --only telegram-bot
          pm2 save
          echo "Bot started with PM2."
          EOF

      - name: Confirm deployment completion
        run: |
          echo "===================================="
          echo "DEPLOYMENT COMPLETED SUCCESSFULLY!"
          echo "===================================="
